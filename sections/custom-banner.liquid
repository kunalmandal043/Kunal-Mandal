{% schema %}
{
  "name": "Custom Banner",
  "settings": [
    { "type": "text", "id": "brand_text", "label": "Brand text (left)", "default": "TISSO VISON" },
    { "type": "text", "id": "top_note", "label": "Top Note", "default": "Find the ideal gift for your loved ones." },
    { "type": "text", "id": "title", "label": "Main Title", "default": "The Gift Guide" },
    { "type": "textarea", "id": "subtitle", "label": "Subtitle", "default": "Discover Joy: Your Ultimate Holiday Gift Destination. Explore our curated selection and find the perfect gifts to delight your loved ones this holiday season" },
    { "type": "text", "id": "bottom_note", "label": "Bottom Note", "default": "SUSTAINABLE, ETHICALLY MADE CLOTHES IN SIZES XXS TO 6XL" },
    { "type": "text", "id": "top_cta_label", "label": "Top-right button label", "default": "CHOOSE GIFT" },
    { "type": "url", "id": "button_url", "label": "Button URL" },
    { "type": "text", "id": "button_text", "label": "Bottom button text", "default": "SHOP NOW" }
  ],
  "presets": [{ "name": "Custom Banner" }]
}
{% endschema %}

{{ 'custom-banner.css' | asset_url | stylesheet_tag }}

<section class="custom-banner">
  <!-- Header bar -->
  <div class="banner-head">
    <!-- Mobile: Taskbar Icon -->
    <div class="banner-taskbar" id="mobile-menu-toggle">
      <img 
        src="{{ 'taskbar.svg' | asset_url }}" 
        alt="Menu icon" 
        width="24" 
        height="24" 
        loading="lazy" 
        decoding="async"
        class="menu-icon"
      />
      <img 
        src="{{ 'close.svg' | asset_url }}" 
        alt="Close menu icon" 
        width="24" 
        height="24" 
        loading="lazy" 
        decoding="async"
        class="close-icon"
        style="display: none;"
      />
    </div>

    <!-- Brand text -->
    <div class="banner-head__left">
      <span class="brand">{{ section.settings.brand_text }}</span>
    </div>

    <!-- Center text (desktop only) -->
    <p class="banner-head__center">{{ section.settings.top_note }}</p>

    <!-- Right CTA (desktop only) -->
    <div class="banner-head__right">
      <a href="{{ section.settings.button_url }}" class="banner-cta">
        {{ section.settings.top_cta_label }}
        <img 
          src="{{ 'choose-gift-arrow.svg' | asset_url }}" 
          alt="Arrow icon" 
          class="btn-icon"
          width="20" 
          height="20" 
          loading="lazy" 
          decoding="async"
        />
      </a>
    </div>
  </div>

  <!-- Mobile Dropdown Menu - Now positioned below header -->
  <div class="mobile-dropdown" id="mobile-dropdown">
    <div class="mobile-dropdown__content">
      <p class="mobile-dropdown__center">{{ section.settings.top_note }}</p>
      <a href="{{ section.settings.button_url }}" class="mobile-dropdown__cta">
        {{ section.settings.top_cta_label }}
        <img 
          src="{{ 'choose-gift-arrow.svg' | asset_url }}" 
          alt="Arrow icon" 
          class="btn-icon"
          width="20" 
          height="20" 
          loading="lazy" 
          decoding="async"
        />
      </a>
    </div>
  </div>

  <!-- Body -->
  <div class="banner-body"> 
    <div class="body-text"> 
      <h1 class="banner-title">{{ section.settings.title }}</h1> 
      <p class="banner-sub">{{ section.settings.subtitle }}</p> 
      <div class="banner-head__bottom">
        <a href="{{ section.settings.button_url }}" class="bottom-banner-cta">
          {{ section.settings.button_text }}
          <img 
            src="{{ 'shop-now-arrow.svg' | asset_url }}" 
            alt="Arrow icon" 
            class="bottom-btn-icon"
            width="20" 
            height="20" 
            loading="lazy" 
            decoding="async"
          />
        </a>
      </div> 
    </div> 
  </div>

  <!--footer-->
  <div class="banner-footer">
    <p class="banner-bottom">{{ section.settings.bottom_note }}</p>
  </div>
</section>

<script>
// Smooth mobile menu implementation
(function() {
  // Initialize when DOM is ready
  function initMobileMenu() {
    const menuToggle = document.getElementById('mobile-menu-toggle');
    const mobileDropdown = document.getElementById('mobile-dropdown');
    
    if (!menuToggle || !mobileDropdown) {
      console.error('Mobile menu elements not found');
      return;
    }
    
    const menuIcon = menuToggle.querySelector('.menu-icon');
    const closeIcon = menuToggle.querySelector('.close-icon');
    const body = document.body;
    
    // Toggle menu function
    function toggleMenu() {
      const isOpen = mobileDropdown.classList.contains('active');
      
      if (isOpen) {
        // Close menu with smooth animation
        mobileDropdown.classList.remove('active');
        mobileDropdown.classList.add('closing');
        
        setTimeout(() => {
          mobileDropdown.classList.remove('closing');
          if (menuIcon) menuIcon.style.display = 'block';
          if (closeIcon) closeIcon.style.display = 'none';
          body.classList.remove('mobile-menu-open');
        }, 300); // Match this with CSS transition time
      } else {
        // Open menu with smooth animation
        if (menuIcon) menuIcon.style.display = 'none';
        if (closeIcon) closeIcon.style.display = 'block';
        body.classList.add('mobile-menu-open');
        
        // Force reflow before adding active class for smooth animation
        mobileDropdown.offsetHeight;
        mobileDropdown.classList.add('active');
      }
    }
    
    // Add click event to menu toggle
    menuToggle.addEventListener('click', function(e) {
      e.stopPropagation();
      toggleMenu();
    });
    
    // Close menu when clicking on the overlay (outside content)
    mobileDropdown.addEventListener('click', function(e) {
      if (e.target === mobileDropdown) {
        toggleMenu();
      }
    });
    
    // Close menu when pressing Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && mobileDropdown.classList.contains('active')) {
        toggleMenu();
      }
    });
  }
  
  // Run initialization when DOM is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileMenu);
  } else {
    // DOM is already ready
    initMobileMenu();
  }
})();
</script>
