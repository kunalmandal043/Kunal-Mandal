// custom-grid.js
function initCustomGrid() {
  const gridItems = document.querySelectorAll(".grid-item");
  const popup = document.getElementById("product-popup");
  const popupClose = document.getElementById("popup-close");
  const popupImage = document.getElementById("popup-image");
  const popupTitle = document.getElementById("popup-title");
  const popupPrice = document.getElementById("popup-price");
  const popupDescription = document.getElementById("popup-description");
  const sizeSelect = document.getElementById("size-select");
  const addToCartBtn = document.getElementById("add-to-cart");
  const colorOptionContainer = document.getElementById("color-option-container");
  const sizeOptionContainer = document.getElementById("size-option-container");
  const colorSwatchesContainer = document.getElementById("color-swatches");

  let currentProduct = null;
  let selectedColor = null;

  function formatMoney(cents) {
    return (cents / 100).toLocaleString("en-US", { style: "currency", currency: "USD" });
  }

  function findVariant(product, selectedOptions) {
    return product.variants.find(variant =>
      variant.options.every((option, index) => selectedOptions[index] === option)
    );
  }

  function updatePrice() {
    if (!currentProduct) return;
    const selectedSize = sizeSelect.value;
    const selectedOptions = [];
    currentProduct.options.forEach(option => {
      if (option.name.toLowerCase() === "color") {
        selectedOptions.push(selectedColor);
      } else if (option.name.toLowerCase() === "size") {
        selectedOptions.push(selectedSize);
      } else {
        selectedOptions.push(option.values[0]);
      }
    });
    const variant = findVariant(currentProduct, selectedOptions);
    if (variant) {
      popupPrice.textContent = formatMoney(parseFloat(variant.price) * 100);
    }
  }

  async function showProductPopup(handle) {
    if (!handle) return;
    try {
      const res = await fetch(`/products/${handle}.js`);
      const data = await res.json();
      currentProduct = data;

      popupImage.src = data.images.length ? data.images[0] : "{{ 'placeholder.png' | asset_url }}";
      popupTitle.textContent = data.title;
      popupPrice.textContent = formatMoney(parseFloat(data.variants[0].price) * 100);
      popupDescription.innerHTML = data.description || "";

      sizeSelect.innerHTML = "";
      colorSwatchesContainer.innerHTML = "";
      colorOptionContainer.style.display = "none";
      sizeOptionContainer.style.display = "none";

      if (data.options) {
        data.options.forEach(option => {
          if (option.name.toLowerCase() === "size") {
            sizeOptionContainer.style.display = "block";
            option.values.forEach(val => {
              const opt = document.createElement("option");
              opt.value = val;
              opt.textContent = val;
              sizeSelect.appendChild(opt);
            });
          } else if (option.name.toLowerCase() === "color") {
            colorOptionContainer.style.display = "block";
            option.values.forEach((val, index) => {
              const colorOption = document.createElement("div");
              colorOption.classList.add("color-option");

              const swatch = document.createElement("div");
              swatch.classList.add("color-swatch");
              swatch.style.backgroundColor = val.toLowerCase();

              const label = document.createElement("span");
              label.classList.add("color-name");
              label.textContent = val;

              colorOption.appendChild(swatch);
              colorOption.appendChild(label);

              if (index === 0) {
                colorOption.classList.add("selected");
                selectedColor = val;
              }

              colorOption.addEventListener("click", () => {
                document.querySelectorAll(".color-option").forEach(opt => opt.classList.remove("selected"));
                colorOption.classList.add("selected");
                selectedColor = val;
                updatePrice();
              });

              colorSwatchesContainer.appendChild(colorOption);
            });
            updatePrice();
          }
        });
      }

      sizeSelect.addEventListener("change", updatePrice);

      popup.classList.remove("hidden");
      document.body.style.overflow = "hidden";
    } catch (err) {
      console.error("Error loading product:", err);
    }
  }

  gridItems.forEach(item => {
    const popupIcon = item.querySelector(".popup-icon");
    if (!popupIcon) return;
    popupIcon.addEventListener("click", e => {
      e.stopPropagation();
      const handle = item.dataset.handle;
      showProductPopup(handle);
    });
  });

  popupClose.addEventListener("click", () => {
    popup.classList.add("hidden");
    document.body.style.overflow = "";
  });

  popup.addEventListener("click", e => {
    if (e.target === popup) {
      popup.classList.add("hidden");
      document.body.style.overflow = "";
    }
  });
}

if (document.readyState === "loading") {
  document.addEventListener("DOMContentLoaded", initCustomGrid);
} else {
  initCustomGrid();
}

if (typeof Shopify !== "undefined") {
  document.addEventListener("shopify:section:load", initCustomGrid);
}
