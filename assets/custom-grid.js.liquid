const gridItems = document.querySelectorAll(".grid-item");
const popup = document.getElementById("product-popup");
const popupClose = document.getElementById("popup-close");
const popupImage = document.getElementById("popup-image");
const popupTitle = document.getElementById("popup-title");
const popupPrice = document.getElementById("popup-price");
const popupDescription = document.getElementById("popup-description");
const sizeSelect = document.getElementById("size-select");
const colorSelect = document.getElementById("color-select");
const addToCartBtn = document.getElementById("add-to-cart");

let currentProduct = null;

// Open popup
gridItems.forEach(item => {
  const popupIcon = item.querySelector(".popup-icon");
  popupIcon.addEventListener("click", async (e) => {
    e.stopPropagation(); // prevent parent click
    const handle = item.dataset.handle;

    if (!handle) {
      console.error("Missing product handle on grid item");
      return;
    }

    try {
      const response = await fetch(`/products/${handle}.js`);
      if (!response.ok) throw new Error(`Product fetch failed for ${handle}`);
      const product = await response.json();
      currentProduct = product;

      // Fill popup
      popupImage.src = product.images.length > 0 
        ? product.images[0] 
        : "{{ 'placeholder.png' | asset_url }}";
      popupTitle.textContent = product.title;
      popupPrice.textContent = formatMoney(product.price);
      popupDescription.textContent = product.description || "";

      // Populate size & color (like we discussed before) ...

      popup.classList.remove("hidden"); // 
    } catch (err) {
      console.error("Error loading product:", err);
    }
  });
});


// Close popup
popupClose.addEventListener("click", () => popup.classList.add("hidden"));
popup.addEventListener("click", e => {
  if (e.target === popup) popup.classList.add("hidden");
});

// Add to cart
addToCartBtn.addEventListener("click", async () => {
  if (!currentProduct) return;

  const selectedSize = sizeSelect.value;
  const selectedColor = colorSelect.value;

  // Find variant that matches selected size & color
  const matchedVariant = currentProduct.variants.find(variant => {
    return variant.options.includes(selectedSize) && variant.options.includes(selectedColor);
  });

  if (!matchedVariant) {
    alert("Please select valid options.");
    return;
  }

  try {
    await fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: matchedVariant.id, quantity: 1 })
    });

    alert("Product added to cart!");
    popup.classList.add("hidden");
  } catch (err) {
    console.error("Error adding to cart:", err);
    alert("Could not add product to cart.");
  }
});

// Format money
function formatMoney(cents) {
  return (cents / 100).toLocaleString("en-US", {
    style: "currency",
    currency: "USD"
  });
}
